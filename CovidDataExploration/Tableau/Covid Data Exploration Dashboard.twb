<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.04cxdgc18s4uxt1bjf3ot0s318iz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1ejxbgx1sq2phm18884j01a9f5yv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sthas/Suyash/Data-Analytics-Projects/CovidDataExploration/Tableau/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ejxbgx1sq2phm18884j01a9f5yv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='TotalCases' ordinal='0' />
            <column datatype='integer' name='TotalDeaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ejxbgx1sq2phm18884j01a9f5yv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='TotalCases' ordinal='0' />
            <column datatype='integer' name='TotalDeaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E415F8FA0F564D64A960FBFF1F18C38A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E415F8FA0F564D64A960FBFF1F18C38A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E415F8FA0F564D64A960FBFF1F18C38A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E415F8FA0F564D64A960FBFF1F18C38A]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Nepal&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E415F8FA0F564D64A960FBFF1F18C38A'>
            <properties context=''>
              <relation connection='excel-direct.1ejxbgx1sq2phm18884j01a9f5yv' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='TotalCases' ordinal='0' />
                  <column datatype='integer' name='TotalDeaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0otnxxa0ux1ukr1e9xegb0sfxybg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.092kjc91fm3v9p12nl7vn05f2oqf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sthas/Suyash/Data-Analytics-Projects/CovidDataExploration/Tableau/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.092kjc91fm3v9p12nl7vn05f2oqf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.092kjc91fm3v9p12nl7vn05f2oqf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3370B3E531644997B08590D135E53520]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3370B3E531644997B08590D135E53520]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_3370B3E531644997B08590D135E53520]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Nepal&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_3370B3E531644997B08590D135E53520'>
            <properties context=''>
              <relation connection='excel-direct.092kjc91fm3v9p12nl7vn05f2oqf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.164n41x1u0xoix13lgylv0q1mnvc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1ae0nwn01i39711bhtlpt1l487wv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sthas/Suyash/Data-Analytics-Projects/CovidDataExploration/Tableau/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ae0nwn01i39711bhtlpt1l487wv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ae0nwn01i39711bhtlpt1l487wv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B2BDF8B60E947C799B23DED2908FF43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B2BDF8B60E947C799B23DED2908FF43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B2BDF8B60E947C799B23DED2908FF43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B2BDF8B60E947C799B23DED2908FF43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9B2BDF8B60E947C799B23DED2908FF43]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Nepal&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9B2BDF8B60E947C799B23DED2908FF43'>
            <properties context=''>
              <relation connection='excel-direct.1ae0nwn01i39711bhtlpt1l487wv' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1ioxbov150fgk518k8kwg0be9tgo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.11hp5m61covj1b19t7zgx1mfc6r8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sthas/Suyash/Data-Analytics-Projects/CovidDataExploration/Tableau/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.11hp5m61covj1b19t7zgx1mfc6r8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.11hp5m61covj1b19t7zgx1mfc6r8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_202F48D4C2C2432DB38985562D4BE1C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_202F48D4C2C2432DB38985562D4BE1C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_202F48D4C2C2432DB38985562D4BE1C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_202F48D4C2C2432DB38985562D4BE1C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_202F48D4C2C2432DB38985562D4BE1C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_202F48D4C2C2432DB38985562D4BE1C4]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='traffic_light_10_0' type='palette'>
            <map to='#309143'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Nepal&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_202F48D4C2C2432DB38985562D4BE1C4'>
            <properties context=''>
              <relation connection='excel-direct.11hp5m61covj1b19t7zgx1mfc6r8' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='Date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.04cxdgc18s4uxt1bjf3ot0s318iz' />
          </datasources>
          <datasource-dependencies datasource='federated.04cxdgc18s4uxt1bjf3ot0s318iz'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[sum:TotalDeaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[:Measure Names]' value='167' />
            <format attr='height' value='56' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#55aaff' />
            <format attr='height' field='[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[:Measure Names]' value='21' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='3.4364640712738037' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3C10D55F-72BD-4E4D-98A8-18C5591F630D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0otnxxa0ux1ukr1e9xegb0sfxybg' />
          </datasources>
          <datasource-dependencies datasource='federated.0otnxxa0ux1ukr1e9xegb0sfxybg'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[none:location:nk]' direction='DESC' using='[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='100000' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5382320880889893' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{BB121C8A-95D0-43F6-BF00-0F6062408A26}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.164n41x1u0xoix13lgylv0q1mnvc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.164n41x1u0xoix13lgylv0q1mnvc'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.164n41x1u0xoix13lgylv0q1mnvc].[Longitude (generated)]' field-type='quantitative' max='27219423.934683107' min='-12855592.750895394' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.164n41x1u0xoix13lgylv0q1mnvc].[Latitude (generated)]' field-type='quantitative' max='17582704.867544804' min='-8324376.6020346582' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.164n41x1u0xoix13lgylv0q1mnvc].[sum:PercentPopulationInfected:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.164n41x1u0xoix13lgylv0q1mnvc].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.164n41x1u0xoix13lgylv0q1mnvc].[none:Location:nk]' />
              <color column='[federated.164n41x1u0xoix13lgylv0q1mnvc].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.164n41x1u0xoix13lgylv0q1mnvc].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.164n41x1u0xoix13lgylv0q1mnvc].[Latitude (generated)]</rows>
        <cols>[federated.164n41x1u0xoix13lgylv0q1mnvc].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5C299E73-EAEC-4F84-A07E-06F2FBC7693F}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1ioxbov150fgk518k8kwg0be9tgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1ioxbov150fgk518k8kwg0be9tgo'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]' />
              <text column='[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]' />
              <lod column='[federated.1ioxbov150fgk518k8kwg0be9tgo].[avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ioxbov150fgk518k8kwg0be9tgo].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1ioxbov150fgk518k8kwg0be9tgo].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{415C82F8-9A7D-43F7-A203-A76E71948FA0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Covid Data Exploration</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='20' param='vert' type-v2='layout-flow' w='99010' x='495' y='978'>
            <zone h='5501' id='21' type-v2='title' w='99010' x='495' y='978'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92543' id='18' param='vert' type-v2='layout-flow' w='99010' x='495' y='6479'>
              <zone h='92543' id='11' param='horz' type-v2='layout-flow' w='99010' x='495' y='6479'>
                <zone h='92543' id='8' param='horz' type-v2='layout-flow' w='99010' x='495' y='6479'>
                  <zone h='92543' id='6' type-v2='layout-basic' w='99010' x='495' y='6479'>
                    <zone h='23653' id='3' name='Sheet 1' w='37907' x='495' y='6479'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='46271' id='9' name='Sheet 2' w='49505' x='50000' y='6479'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='68890' id='13' name='Sheet 3' w='49505' x='495' y='30132'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='46272' id='15' name='Sheet 4' w='40662' x='50000' y='52750'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='46272' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]' type-v2='color' w='8843' x='90662' y='52750'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='17998' id='12' name='Sheet 2' pane-specification-id='0' param='[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[none:location:nk]' type-v2='color' w='11598' x='38402' y='6479'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5655' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.164n41x1u0xoix13lgylv0q1mnvc].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11598' x='38402' y='24477'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>Covid Data Exploration</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='22' param='vert' type-v2='layout-flow' w='99010' x='495' y='978'>
                <zone h='5501' id='21' type-v2='title' w='99010' x='495' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='181' h='23653' id='3' is-fixed='true' name='Sheet 1' w='37907' x='495' y='6479'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46271' id='9' is-fixed='true' name='Sheet 2' w='49505' x='50000' y='6479'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17998' id='12' name='Sheet 2' pane-specification-id='0' param='[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[none:location:nk]' type-v2='color' w='11598' x='38402' y='6479'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68890' id='13' is-fixed='true' name='Sheet 3' w='49505' x='495' y='30132'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5655' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.164n41x1u0xoix13lgylv0q1mnvc].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11598' x='38402' y='24477'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46272' id='15' is-fixed='true' name='Sheet 4' w='40662' x='50000' y='52750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='46272' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]' type-v2='color' w='8843' x='90662' y='52750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F9F7DA27-A1DA-4B0A-BC63-AC0C7A81D842}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04cxdgc18s4uxt1bjf3ot0s318iz].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68DE5B6B-D5D8-4C2A-AA1E-ADCD8AB24209}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24068DF9-D8D8-4F0F-AC92-03D07D9D55A6}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.164n41x1u0xoix13lgylv0q1mnvc].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.164n41x1u0xoix13lgylv0q1mnvc].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{416F82E4-863C-490A-9B04-EFFCE4217B72}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]</field>
            <field>[federated.1ioxbov150fgk518k8kwg0be9tgo].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2AF968F-7FCC-49ED-BBF8-2C766B8953F1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0otnxxa0ux1ukr1e9xegb0sfxybg].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ioxbov150fgk518k8kwg0be9tgo].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <device-preview visible='true'>
        <device name='Generic Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{17AE8756-B641-4279-963E-D476EB66CCA5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z5Rcx33o+at7b+cw3T09oSfPYJBBJAIgAEaJoihasmzJtizpWX72W8s+
      z+99ebt7dr/6y57ddVoHyXqWFS3ZypaoLFIUA0gQIHKahMk9qXs65+4baj80MOQQmYgU+nfO
      nOnbfW9V3br1r6p/qLpCSilp0OA+RbnbBWjQ4G7SEIAG9zUNAWhwX9MQgAb3NZcIgGVU+cUP
      v8eXvvp1YuniVS9OTJ/ma99/fuW4Worz5a/9YOX4lz/6Np///Of58XMvo5vWJdfrlQIzc0tX
      TN+qFvnal/+Fz3/+83z5a9+gYlz9Zl768TcYXchd/aS3MTkxjiUBPcvffebLNCwC9xerBUBK
      vvrZv8HZvZU/+P2P4FAFerXE8WNHSWaLVPJpoosJkJLpiXE8rX08tmcbUkoWo1OcOTfEbHRx
      Jbk3Xj/JJz/9J7RpGf7xS99BSovp8RGOnTxDzbA4+8YL/MP//AqnhsawjBrnTp9kaHQS64Jh
      ytJLnF8s8Kd/+qf88ac+gVFYJrqYwKgWmZqZZ256krnoNOdGJ7CkJLE0T6GiI02Dc6dPEF1c
      RkrJ1OQE+WyK2YU4mcQSR44cIZktkliM8jd//VccOnyEMi4+9IH3IIBscoljx09R1U1qpSzT
      cwucO32C5XT+Tj6bBneAVQIgpcW5uTSP71iL3emhyevg//vL/5uSbvLZv/l/SBWLfOHL/4Zp
      lPnS175NaWmM7/zsVaZPv8qXvvMctXKJt3fSQijseuIDLI6dplrJcn5invTcMJ//+g/QNBuq
      qmG32UgszBDPFjnyy+/wwtHzK9fnUjEOHz7M8ZPnsNltfOFzn+XrX/kCmZrgR9/6CofPTnLs
      V9/nR6+cWrnm3/7lH5iM5Xn26//MyckY//bFz/LXf/MPzMXTDA2dw7IM/vqv/hpL0VAUFYfD
      gRBlvvSlb1JMzPI3n/kKejnN//u3nyU9N8rf/uMXKJQL/NXffrYxQvyasXoEEAJFSsyLPbCZ
      paq08Mjeh9i7pZvpJDTJDGdPHGJg+37EhcvOnj7NBz78EXbueADbZTKRpo6iaWRj8xw88gYT
      swssLi7S1dNDS1sHG9f2MzMxzJEjx4glUiwuxN8soKLidDpxOOzY3AHet6uPwzM1tg9GQLGz
      Z+9ePvD0e5kcG1+5ZmYpxwfe9ygffOoRTp0eRqLwX//X/5P9D/Ty+msHOX1miKXYEr5gG6Fg
      gK3btuLU6lUxe/4cm/e+h70PP4Fay2CYFgMbt/LQQ7uxmbVbWvkN7j6rBEAIwYff+yCf+Zd/
      48BLLzC9ZOARSX750sscPDvHhv52Ht+7hb/8zDd4z2MPrVy3dsN6fv6j7/PSy6/x1iZiGiXe
      eP0gX/yfn+Ph9/8m2eVF3MEInZFWFMDpDZKIjnJqaIzo7Cy9gxtoDvhXFdAyDcrlMsVSgWI6
      xoGhJA/32Xj5xHmwahw9/Drf/u5P2LVnx8o1g90hnv3J8zz781d4cMdmVLsLr8sORoV4rsba
      gT4c9rqoemySVw4conJBR+ld/wDnDr3ASy/8HNwtaGrDTvDrjLjEEywlidg88XSJtesGUSyd
      0bHzdPauocnrwqyVGJlaZPP6NeiVAsvZKh2tIeZmJlFdPgzdorurHYDZyTEyhQrtnb20NjfV
      dYCJ8/ib2yiXKnR1trO8GCVXU+jrCHN+fIq2tjA6dlpDfqSpMzIygm5KFM1OZ2sIy+ahyaUw
      H0vz029+kW1P/hY9kQhdkRaSsXkcTa147AqT42N4QhHawwHmorNEOrtRFUEyNk/BUFGtGpHO
      bvRynvHpBTZsHGQ+GqO3t5NCNsnM/DLr1q+HWoHlvE5Ha4DZ2Xm6e7pXRr4G734uFYB3EccP
      v8bgtj34nZebeDVocG3e1QLQoMHN0pjgNrivaQhAg/uahgA0uKPkkjGm3uIsBTBNEyktTOvS
      2biUEvMyUQS3Cu22pdygwWU4dmqIRx7ew6FXX8HvD7GczZFIx9gx2MtcRgVZobM9QLpgQCWD
      VAymoyZre9x0r9tKs999S8uz2hNsmYycPcnJsyOYZpGjR8699VdOHD9xaQqWwaGjxwHILC8w
      s7CMUS2wtJy5asbnh0+Rq5g3fQMN3l3YFZPJ8VHi2SLjZ87h0lS8oXYMvcJCdBmHIjg1fJal
      eBIdGzXDwutSmZ8eJ7qUuOXlWTUCPP+Df6fq76fNU6akhzl7ZpxN69s5PTzJ9p07OHvqBKZp
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      +P8BpRspXBSvfsAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      gmgQHEPzfP3/I+pcTUecZMcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
